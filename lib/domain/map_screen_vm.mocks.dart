// Mocks generated by Mockito 5.3.2 from annotations
// in field_drawer/domain/map_screen_vm.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i2;
import 'dart:ui' as _i8;

import 'package:field_drawer/domain/map_screen_vm.dart' as _i6;
import 'package:field_drawer/models/danger.dart' as _i4;
import 'package:flutter/material.dart' as _i5;
import 'package:flutter_google_places/flutter_google_places.dart' as _i7;
import 'package:google_maps_flutter/google_maps_flutter.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCompleter_0<T> extends _i1.SmartFake implements _i2.Completer<T> {
  _FakeCompleter_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCameraPosition_1 extends _i1.SmartFake
    implements _i3.CameraPosition {
  _FakeCameraPosition_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDanger_2 extends _i1.SmartFake implements _i4.Danger {
  _FakeDanger_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_3 extends _i1.SmartFake
    implements _i5.TextEditingController {
  _FakeTextEditingController_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLatLng_4 extends _i1.SmartFake implements _i3.LatLng {
  _FakeLatLng_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMarker_5 extends _i1.SmartFake implements _i3.Marker {
  _FakeMarker_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MapScreenVm].
///
/// See the documentation for Mockito's code generation for more information.
class MockMapScreenVm extends _i1.Mock implements _i6.MapScreenVm {
  @override
  _i2.Completer<_i3.GoogleMapController> get controller => (super.noSuchMethod(
        Invocation.getter(#controller),
        returnValue: _FakeCompleter_0<_i3.GoogleMapController>(
          this,
          Invocation.getter(#controller),
        ),
        returnValueForMissingStub: _FakeCompleter_0<_i3.GoogleMapController>(
          this,
          Invocation.getter(#controller),
        ),
      ) as _i2.Completer<_i3.GoogleMapController>);
  @override
  set controller(_i2.Completer<_i3.GoogleMapController>? _controller) =>
      super.noSuchMethod(
        Invocation.setter(
          #controller,
          _controller,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.CameraPosition get camPosition => (super.noSuchMethod(
        Invocation.getter(#camPosition),
        returnValue: _FakeCameraPosition_1(
          this,
          Invocation.getter(#camPosition),
        ),
        returnValueForMissingStub: _FakeCameraPosition_1(
          this,
          Invocation.getter(#camPosition),
        ),
      ) as _i3.CameraPosition);
  @override
  _i4.Danger get danger => (super.noSuchMethod(
        Invocation.getter(#danger),
        returnValue: _FakeDanger_2(
          this,
          Invocation.getter(#danger),
        ),
        returnValueForMissingStub: _FakeDanger_2(
          this,
          Invocation.getter(#danger),
        ),
      ) as _i4.Danger);
  @override
  set danger(_i4.Danger? _danger) => super.noSuchMethod(
        Invocation.setter(
          #danger,
          _danger,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Set<_i3.Marker> get markers => (super.noSuchMethod(
        Invocation.getter(#markers),
        returnValue: <_i3.Marker>{},
        returnValueForMissingStub: <_i3.Marker>{},
      ) as Set<_i3.Marker>);
  @override
  _i5.TextEditingController get dangerNameController => (super.noSuchMethod(
        Invocation.getter(#dangerNameController),
        returnValue: _FakeTextEditingController_3(
          this,
          Invocation.getter(#dangerNameController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_3(
          this,
          Invocation.getter(#dangerNameController),
        ),
      ) as _i5.TextEditingController);
  @override
  set dangerNameController(_i5.TextEditingController? _dangerNameController) =>
      super.noSuchMethod(
        Invocation.setter(
          #dangerNameController,
          _dangerNameController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<String> get dangeresLevels => (super.noSuchMethod(
        Invocation.getter(#dangeresLevels),
        returnValue: <String>[],
        returnValueForMissingStub: <String>[],
      ) as List<String>);
  @override
  set dangeresLevels(List<String>? _dangeresLevels) => super.noSuchMethod(
        Invocation.setter(
          #dangeresLevels,
          _dangeresLevels,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i4.Danger> get dangerous => (super.noSuchMethod(
        Invocation.getter(#dangerous),
        returnValue: <_i4.Danger>[],
        returnValueForMissingStub: <_i4.Danger>[],
      ) as List<_i4.Danger>);
  @override
  set dangerous(List<_i4.Danger>? _dangerous) => super.noSuchMethod(
        Invocation.setter(
          #dangerous,
          _dangerous,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get selectedTown => (super.noSuchMethod(
        Invocation.getter(#selectedTown),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set selectedTown(String? _selectedTown) => super.noSuchMethod(
        Invocation.setter(
          #selectedTown,
          _selectedTown,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get selectedDangerLevel => (super.noSuchMethod(
        Invocation.getter(#selectedDangerLevel),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  set selectedDangerLevel(String? _selectedDangerLevel) => super.noSuchMethod(
        Invocation.setter(
          #selectedDangerLevel,
          _selectedDangerLevel,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.LatLng get selectedLatLng => (super.noSuchMethod(
        Invocation.getter(#selectedLatLng),
        returnValue: _FakeLatLng_4(
          this,
          Invocation.getter(#selectedLatLng),
        ),
        returnValueForMissingStub: _FakeLatLng_4(
          this,
          Invocation.getter(#selectedLatLng),
        ),
      ) as _i3.LatLng);
  @override
  set selectedLatLng(_i3.LatLng? _selectedLatLng) => super.noSuchMethod(
        Invocation.setter(
          #selectedLatLng,
          _selectedLatLng,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Marker get selectedMarker => (super.noSuchMethod(
        Invocation.getter(#selectedMarker),
        returnValue: _FakeMarker_5(
          this,
          Invocation.getter(#selectedMarker),
        ),
        returnValueForMissingStub: _FakeMarker_5(
          this,
          Invocation.getter(#selectedMarker),
        ),
      ) as _i3.Marker);
  @override
  set selectedMarker(_i3.Marker? _selectedMarker) => super.noSuchMethod(
        Invocation.setter(
          #selectedMarker,
          _selectedMarker,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Mode get mode => (super.noSuchMethod(
        Invocation.getter(#mode),
        returnValue: _i7.Mode.overlay,
        returnValueForMissingStub: _i7.Mode.overlay,
      ) as _i7.Mode);
  @override
  set mode(_i7.Mode? _mode) => super.noSuchMethod(
        Invocation.setter(
          #mode,
          _mode,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.ArgumentCallback<_i3.LatLng> get onTap => (super.noSuchMethod(
        Invocation.getter(#onTap),
        returnValue: (_i3.LatLng argument) {},
        returnValueForMissingStub: (_i3.LatLng argument) {},
      ) as _i3.ArgumentCallback<_i3.LatLng>);
  @override
  set onTap(_i3.ArgumentCallback<_i3.LatLng>? _onTap) => super.noSuchMethod(
        Invocation.setter(
          #onTap,
          _onTap,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Marker get emptyMarker => (super.noSuchMethod(
        Invocation.getter(#emptyMarker),
        returnValue: _FakeMarker_5(
          this,
          Invocation.getter(#emptyMarker),
        ),
        returnValueForMissingStub: _FakeMarker_5(
          this,
          Invocation.getter(#emptyMarker),
        ),
      ) as _i3.Marker);
  @override
  _i5.TextEditingController get textEditingController => (super.noSuchMethod(
        Invocation.getter(#textEditingController),
        returnValue: _FakeTextEditingController_3(
          this,
          Invocation.getter(#textEditingController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_3(
          this,
          Invocation.getter(#textEditingController),
        ),
      ) as _i5.TextEditingController);
  @override
  set textEditingController(
          _i5.TextEditingController? _textEditingController) =>
      super.noSuchMethod(
        Invocation.setter(
          #textEditingController,
          _textEditingController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  dynamic generateMarkers(_i5.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #generateMarkers,
          [context],
        ),
        returnValueForMissingStub: null,
      );
  @override
  dynamic getPrediction(_i5.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #getPrediction,
          [context],
        ),
        returnValueForMissingStub: null,
      );
  @override
  dynamic addMarker(
    _i3.LatLng? point,
    _i5.BuildContext? context,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addMarker,
          [
            point,
            context,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  dynamic deleteDanger(_i5.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #deleteDanger,
          [context],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.Future<String> getTownFromCords() => (super.noSuchMethod(
        Invocation.method(
          #getTownFromCords,
          [],
        ),
        returnValue: _i2.Future<String>.value(''),
        returnValueForMissingStub: _i2.Future<String>.value(''),
      ) as _i2.Future<String>);
  @override
  dynamic openDialogEditDanger(
    _i5.BuildContext? context,
    _i3.LatLng? latLng,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #openDialogEditDanger,
          [
            context,
            latLng,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
